[include]
	path = ~/.gitconfig.local
[color]
	ui = true
[push]
	default = simple
[core]
	excludesfile = ~/.gitignore_global
	editor = code --wait
[alias]
	alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
	b = branch -a
	br = browse-remote
	sh = show
	cm = commit
	cmm = commit -m
	co = checkout
	d = diff
	dc = diff --cached
	di = diff
	dic = diff --cached
	dw = diff --word-diff
	dcw = diff --cached --word-diff
	diw = diff --word-diff
	dicw = diff --cached --word-diff
	dn = diff --numstat
	din = diff --numstat
	f = fetch --prune
	fs = !git f && git su
	ignore = "!f() { ([ ! -e .gitignore ] && touch .gitignore) | echo $1 >> .gitignore ;};f"
	ignore-local = "!f() { ([ ! -e .git/info/exclude ] ) | echo $1 >> .git/info/exclude ;};f"
	info = remote show origin
	l = log  --decorate --oneline --graph
	ll = log  --decorate --stat --abbrev-commit
	ls = log  --decorate --graph
	la = log  --decorate --oneline --graph --all
	lla = log  --decorate --stat --abbrev-commit --all
  lsa = log  --decorate --graph --all
  list = log --date=short --no-merges --pretty=format:"%s"
	s = status --short --branch
	st = status
	unstage    = reset HEAD --
	cancel     = reset --soft HEAD^
	me         = !git config --get-regexp user
	today = log --decorate --oneline --since='12 hour ago' --pretty=format:'%C(yellow)%h%Creset %s %C(green)- %an, %cr%Creset'
	pullrebase = pull --rebase
	addall = add --all
	sed =  "!f () { git grep -l $1 | xargs sed -i '' -e \"s/$1/$2/g\" ; }; f"
	sed-filename =  "!f () { git ls-files | grep $1 | sed \"p;s/$1/$2/g\" | xargs -n2 mv ; }; f"
	subadd = "!f () { git subtree add --prefix=${1}  --squash ${2}  ${3} ;};f"
	subpush = "!f () { git subtree push --prefix=${1}  --squash ${2}  ${3} ;};f"
	subpull = "!f () { git subtree pull --prefix=${1}  --squash ${2}  ${3} ;};f"
	rc = rm --cached
	pushf = push --force-with-lease
	pushu = !git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\"
	delete-merged-branch-and-pull = "!f () { git fetch --prune; git checkout $1; git pull; git branch --merged|egrep -v '\\*|develop|master|main|pre-release|release|development|staging|production'|xargs git branch -d; };f"
	delete-merged-branch = "!f () { git fetch --prune; git branch --merged|egrep -v '\\*|develop|master|main|pre-release|release|development|staging|production'|xargs git branch -d; };f"
	cofeature = "!f () { git checkout -b feature/$2 origin/$1;};f"
	cofix = "!f () { git checkout -b fix/$2 origin/$1;};f"
  log-messages = "log --pretty=format:\"%s\""
	cmam = commit --amend --no-edit
  lmr = "log --reverse --pretty=format:'- %s%C(auto)%n%w(0,2,2)%b%-'"
  lmr-with-hash = "log --reverse --pretty=format:'- %C(reset)%h%C(reset) %s%C(auto)%n%w(0,2,2)%b%-'"
  cmfix = '!f() { git commit --fixup=$1 && git rebase -i --autosquash $1^; }; f'
[init]
	defaultBranch = main
